---
- name: Ensure required common packages are installed
  apt:
    name: "{{ packages_common }}"
    state: present
    update_cache: true

- name: Add PostgreSQL GPG key using signed-by
  apt_key:
    url: "{{ pgdg_repo_key_url }}"
    state: present

- name: Add PostgreSQL APT repository
  apt_repository:
    repo: "deb {{ postgresql_apt_repo }} {{ ansible_lsb.codename }}-pgdg main"
    state: present
    filename: "pgdg"
    update_cache: true

- name: Install PostgreSQL 16.8 packages
  apt:
    name: "{{ packages_postgres }}"
    state: present
    update_cache: true

- name: Ensure PostgreSQL service is running and enabled
  service:
    name: postgresql
    state: started
    enabled: true

- name: Set listen_addresses in postgresql.conf
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version_major }}/main/postgresql.conf"
    regexp: '^#?listen_addresses\s*='
    line: "listen_addresses = '{{ listen_addresses }}'"
  notify: Restart PostgreSQL

- name: Allow external connections in pg_hba.conf
  lineinfile:
    path: "/etc/postgresql/{{ postgresql_version_major }}/main/pg_hba.conf"
    insertafter: '^# IPv4 local connections:'
    line: "host    all             all             {{ pg_hba_ipv4 }}            md5"
  notify: Restart PostgreSQL

- name: PostgreSQL object setup
  block:
    - name: Create admin user (equintana)
      postgresql_user:
        name: "{{ db_admin_user }}"
        password: "{{ db_admin_pass }}"
        role_attr_flags: "SUPERUSER"
        state: present

    - name: Create GitLab database
      postgresql_db:
        name: "{{ db_name }}"
        encoding: "UTF8"
        lc_collate: "en_US.UTF-8"
        lc_ctype: "en_US.UTF-8"
        template: template0
        state: present

    - name: Create GitLab DB user
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_user_pass }}"
        role_attr_flags: "LOGIN,CREATEDB"
        state: present

    - name: Grant all privileges to GitLab DB user
      postgresql_privs:
        db: "{{ db_name }}"
        roles: "{{ db_user }}"
        type: "database"
        privs: "ALL"

    - name: Ensure required PostgreSQL extensions are installed
      postgresql_ext:
        name: "{{ item }}"
        db: "{{ db_name }}"
        state: present
      loop: "{{ db_extensions }}"
  become: true
  become_user: postgres
  become_method: sudo

